version: '3.8'

services:
  # Nefer Flutter Web App
  nefer-web:
    build:
      context: .
      dockerfile: Dockerfile.web
    ports:
      - "3000:80"
    environment:
      - FLUTTER_WEB_USE_SKIA=true
    volumes:
      - ./build/web:/usr/share/nginx/html:ro
    depends_on:
      - nefer-functions
    networks:
      - nefer-network

  # Nefer Cloud Functions (Dart)
  nefer-functions:
    build:
      context: ./functions
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
      - FIREBASE_DATABASE_URL=${FIREBASE_DATABASE_URL}
      - GOOGLE_APPLICATION_CREDENTIALS=/app/service-account.json
    volumes:
      - ./functions:/app
      - ./service-account.json:/app/service-account.json:ro
    networks:
      - nefer-network
    restart: unless-stopped

  # Firebase Emulator Suite
  firebase-emulator:
    image: node:18-alpine
    working_dir: /app
    ports:
      - "4000:4000"  # Emulator UI
      - "5000:5000"  # Hosting
      - "5001:5001"  # Functions
      - "8080:8080"  # Firestore
      - "9000:9000"  # Realtime Database
      - "9099:9099"  # Auth
      - "9199:9199"  # Storage
    volumes:
      - .:/app
      - firebase_data:/app/.firebase
    command: >
      sh -c "
        npm install -g firebase-tools &&
        firebase emulators:start --only auth,database,firestore,functions,hosting,storage
      "
    environment:
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
    networks:
      - nefer-network
    depends_on:
      - nefer-functions

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - nefer-network
    restart: unless-stopped

  # PostgreSQL for analytics (optional)
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=nefer_analytics
      - POSTGRES_USER=nefer
      - POSTGRES_PASSWORD=nefer_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - nefer-network
    restart: unless-stopped

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - nefer-web
      - nefer-functions
    networks:
      - nefer-network
    restart: unless-stopped

volumes:
  firebase_data:
  redis_data:
  postgres_data:

networks:
  nefer-network:
    driver: bridge
