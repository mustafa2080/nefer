name: 🏛️ Nefer CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  FLUTTER_VERSION: '3.16.0'
  DART_VERSION: '3.2.0'

jobs:
  # =============================================================================
  # CODE QUALITY & TESTING
  # =============================================================================
  
  analyze:
    name: 📊 Code Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐦 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        
    - name: 📦 Get Flutter dependencies
      run: flutter pub get
      
    - name: 🔍 Analyze Flutter code
      run: flutter analyze
      
    - name: 🎯 Check formatting
      run: dart format --set-exit-if-changed .
      
    - name: ⚡ Analyze Dart functions
      run: |
        cd functions
        dart pub get
        dart analyze

  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐦 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        
    - name: 📦 Get dependencies
      run: flutter pub get
      
    - name: 🧪 Run Flutter tests
      run: flutter test --coverage
      
    - name: ⚡ Run Dart functions tests
      run: |
        cd functions
        dart pub get
        dart test
        
    - name: 📊 Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: coverage/lcov.info

  # =============================================================================
  # BUILD JOBS
  # =============================================================================
  
  build-web:
    name: 🌐 Build Web
    runs-on: ubuntu-latest
    needs: [analyze, test]
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐦 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        
    - name: 📦 Get dependencies
      run: flutter pub get
      
    - name: 🏗️ Build web
      run: flutter build web --release --web-renderer html
      
    - name: 📤 Upload web artifacts
      uses: actions/upload-artifact@v3
      with:
        name: web-build
        path: build/web/

  build-functions:
    name: ⚡ Build Functions
    runs-on: ubuntu-latest
    needs: [analyze, test]
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🎯 Setup Dart
      uses: dart-lang/setup-dart@v1
      with:
        sdk: ${{ env.DART_VERSION }}
        
    - name: 📦 Get dependencies
      run: |
        cd functions
        dart pub get
        
    - name: 🏗️ Build functions
      run: |
        cd functions
        dart compile exe bin/main.dart -o bin/server
        
    - name: 📤 Upload functions artifacts
      uses: actions/upload-artifact@v3
      with:
        name: functions-build
        path: functions/bin/server

  build-android:
    name: 🤖 Build Android
    runs-on: ubuntu-latest
    needs: [analyze, test]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: ☕ Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'
        
    - name: 🐦 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        
    - name: 📦 Get dependencies
      run: flutter pub get
      
    - name: 🏗️ Build APK
      run: flutter build apk --release
      
    - name: 📤 Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: android-apk
        path: build/app/outputs/flutter-apk/app-release.apk

  # =============================================================================
  # DEPLOYMENT JOBS
  # =============================================================================
  
  deploy-staging:
    name: 🎭 Deploy to Staging
    runs-on: ubuntu-latest
    needs: [build-web, build-functions]
    if: github.ref == 'refs/heads/develop'
    environment: staging
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📥 Download web build
      uses: actions/download-artifact@v3
      with:
        name: web-build
        path: build/web/
        
    - name: 📥 Download functions build
      uses: actions/download-artifact@v3
      with:
        name: functions-build
        path: functions/bin/
        
    - name: 🔥 Setup Firebase CLI
      uses: w9jds/firebase-action@master
      with:
        args: use staging
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        
    - name: 🚀 Deploy to Firebase
      uses: w9jds/firebase-action@master
      with:
        args: deploy
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

  deploy-production:
    name: 🏭 Deploy to Production
    runs-on: ubuntu-latest
    needs: [build-web, build-functions, build-android]
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📥 Download web build
      uses: actions/download-artifact@v3
      with:
        name: web-build
        path: build/web/
        
    - name: 📥 Download functions build
      uses: actions/download-artifact@v3
      with:
        name: functions-build
        path: functions/bin/
        
    - name: 🔥 Setup Firebase CLI
      uses: w9jds/firebase-action@master
      with:
        args: use production
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        
    - name: 🚀 Deploy to Firebase
      uses: w9jds/firebase-action@master
      with:
        args: deploy
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        
    - name: 📱 Upload to Play Store (Internal Testing)
      if: success()
      uses: r0adkll/upload-google-play@v1
      with:
        serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT }}
        packageName: com.nefer.ecommerce
        releaseFiles: build/app/outputs/flutter-apk/app-release.apk
        track: internal

  # =============================================================================
  # SECURITY & MONITORING
  # =============================================================================
  
  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔍 Run security scan
      uses: securecodewarrior/github-action-add-sarif@v1
      with:
        sarif-file: 'security-scan-results.sarif'
        
    - name: 📊 Upload SARIF results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: security-scan-results.sarif

  # =============================================================================
  # NOTIFICATIONS
  # =============================================================================
  
  notify:
    name: 📢 Notify Team
    runs-on: ubuntu-latest
    needs: [deploy-production]
    if: always()
    
    steps:
    - name: 📢 Slack Notification
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        channel: '#nefer-deployments'
        text: |
          🏛️ Nefer Deployment Status: ${{ job.status }}
          Branch: ${{ github.ref }}
          Commit: ${{ github.sha }}
          Author: ${{ github.actor }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
